import java.util.ArrayList;

public class undirected_weighted_adjacencylist {
    class Pair {
        int node;   // Neighbor node
        int weight; // Weight of the edge

        Pair(int node, int weight) {
            this.node = node;
            this.weight = weight;
        }
    }


    ArrayList<ArrayList<Pair>> al;

    undirected_weighted_adjacencylist(int nodes) {
            this.al = new ArrayList<>();
            for (int i = 0; i < nodes; i++) {
                al.add(new ArrayList<>());
            }
        }

        void fun(int node1, int node2, int weight) {
            al.get(node1).add (new Pair(node2, weight));
            al.get(node2).add(new Pair(node1,weight));

        }

        void print() {
            for (int i = 0; i < al.size(); i++) {
                for (Pair j : al.get(i)) {
                    System.out.print(j.node + " "+ j.weight+ " ");
                }
                System.out.println();
            }
        }


        public static void main(String[] args) {


            undirected_weighted_adjacencylist gh = new undirected_weighted_adjacencylist(4);
            gh.fun(0, 1,10);
            gh.fun(1, 2,20);
            gh.fun(2, 3,30);
            gh.fun(3, 0,40);
            gh.print();


        }
    }


